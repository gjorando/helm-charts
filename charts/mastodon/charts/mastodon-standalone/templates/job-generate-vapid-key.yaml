{{/* 
This job should be ran if a secret for Mastodon secret has been generated by the chart. It will patch it to add the vapid keys pair, that needs to be generated through the Mastodon command line utility. It won't be created if the secret is already populated with the vapid public and private keys.
*/}}
{{- define "mastodon-standalone.job.generateVapidKeyName" -}}
{{- printf "%s-generate-vapid-key" (include "mastodon-standalone.fullname" .) }}
{{- end}}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace "mastodon-standalone.secretName") }}
{{- if not (or (.Values.existingSecret) (and $secret (index $secret.data "VAPID_PRIVATE_KEY"))) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mastodon-standalone.job.generateVapidKeyName" . | quote }}
  labels: {{ include "mastodon-standalone.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: "post-install"
    helm.sh/hook-delete-policy: "hook-succeeded"
    helm.sh/hook-weight: "-100"
spec:
  backoffLimit: 4
  template:
    metadata:
      name: {{ include "mastodon-standalone.job.generateVapidKeyName" . | quote }}
      labels: {{ include "mastodon-standalone.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "mastodon-standalone.serviceAccountName" . | quote }}
      automountServiceAccountToken: true
      restartPolicy: "Never"
      containers: 
      - name: {{ include "mastodon-standalone.job.generateVapidKeyName" . | quote }}
        image: {{ include "mastodon-standalone.image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /bin/bash
        - -c
        args:
        - |
          SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
          NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
          TOKEN=$(cat ${SERVICEACCOUNT}/token)
          CACERT=${SERVICEACCOUNT}/ca.crt

          echo "Creating a Vapid key pair"
          eval "$(bundle exec rails mastodon:webpush:generate_vapid_key)"
            
          VAPID_PRIVATE_KEY=`echo -n $VAPID_PRIVATE_KEY | base64 -w0`
          VAPID_PUBLIC_KEY=`echo -n $VAPID_PUBLIC_KEY | base64 -w0`

          HTTP_RESPONSE=$(wget -S \
            https://$KUBERNETES_SERVICE_HOST/api/v1/namespaces/${NAMESPACE}/secrets/{{ include "mastodon-standalone.secretName" . }} \
            --method=PATCH \
            --ca-certificate=${CACERT} \
            --header="Authorization: Bearer ${TOKEN}" \
            --header "Content-Type: application/strategic-merge-patch+json" \
            --body-data="{\"data\":{\"VAPID_PRIVATE_KEY\": \"${VAPID_PRIVATE_KEY}\", \"VAPID_PUBLIC_KEY\": \"${VAPID_PUBLIC_KEY}\"}}" 2>&1 \
            | grep HTTP/ | awk '{print $2}')
             
          if [ "$HTTP_RESPONSE" != "200" ]
          then
            echo "PATCH request received a non OK HTTP code: ${HTTP_RESPONSE}"
            exit 1
          fi
          exit 0
{{- end }}
